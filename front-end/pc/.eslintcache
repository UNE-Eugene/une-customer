[{"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\index.js":"1","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\reportWebVitals.js":"2","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\login\\App.js":"3","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\person-center\\Center.js":"4","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\Router\\router.js":"5","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\person-center\\Logger.js":"6","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\search\\search.js":"7","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\result\\result.js":"8","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\dataCenter\\loginMessage.js":"9"},{"size":472,"mtime":1607066663746,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":5564,"mtime":1608204608021,"results":"13","hashOfConfig":"11"},{"size":14400,"mtime":1608211332569,"results":"14","hashOfConfig":"11"},{"size":638,"mtime":1608193637111,"results":"15","hashOfConfig":"11"},{"size":3207,"mtime":1607405016753,"results":"16","hashOfConfig":"11"},{"size":15196,"mtime":1607777840804,"results":"17","hashOfConfig":"11"},{"size":17475,"mtime":1608097290878,"results":"18","hashOfConfig":"11"},{"size":256,"mtime":1608204457803,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"10rx9p0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\index.js",[],["42","43"],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\reportWebVitals.js",[],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\login\\App.js",["44","45"],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\person-center\\Center.js",["46","47","48","49","50","51","52","53"],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\Router\\router.js",["54"],"import React from 'react';\r\nimport {HashRouter, Route, Switch, Redirect} from 'react-router-dom';\r\nimport Login from '../login/App';\r\nimport Center from '../person-center/Center';\r\nimport Search from '../search/search'\r\nimport Result from '../result/result'\r\n\r\nconst BasicRoute = () => (\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Login}/>\r\n            <Route exact path=\"/center\" component={Center}/>\r\n            <Route exact path=\"/search\" component={Search}/>\r\n            <Route exact path=\"/result\" component={Result}/>\r\n        </Switch>\r\n    </HashRouter>\r\n);\r\n\r\n\r\nexport default BasicRoute;","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\person-center\\Logger.js",[],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\search\\search.js",["55","56","57","58","59","60","61","62"],"import { useState } from \"react\";\r\nimport \"./search.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Input,\r\n  Card,\r\n  Select,\r\n  DatePicker,\r\n  Tag,\r\n  InputNumber,\r\n  Slider,\r\n} from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Logo from \"./static/logo.png\";\r\nimport moment from \"moment\";\r\nimport { ArrowRightOutlined } from \"@ant-design/icons\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst dateFormat = \"YYYY/MM/DD\";\r\n\r\nconst options = [];\r\nfor (let i = 0; i < 1000; i++) {\r\n  const value = `${i.toString(36)}${i}`;\r\n  options.push({\r\n    value,\r\n    disabled: i === 10,\r\n  });\r\n}\r\n\r\nfunction handleChange(value) {\r\n  console.log(`selected ${value}`);\r\n}\r\n\r\nfunction disabledDate(current) {\r\n  // Can not select days before today and today\r\n  return current && current < moment().add(-1, \"days\").endOf(\"day\");\r\n}\r\n\r\nconst Search = (props) => {\r\n  const [buttonChecked, setbuttonChecked] = useState(1);\r\n  const [city, setCity] = useState([\"北京\", \"上海\", \"深圳\", \"杭州\"]);\r\n  const [hotel, setHotel] = useState([\"北京金茂万丽\", \"上海静安洲际\"]);\r\n  const [trade, setTrade] = useState([\"来福士\", \"故宫\", \"外滩\", \"东方明珠\"]);\r\n  const [group, setGroup] = useState([\"洲际\", \"万豪\", \"凯悦\", \"希尔顿\"]);\r\n\r\n  const [cityChecked, setCityChecked] = useState(\"\");\r\n  const [hotelChecked, setHotelChecked] = useState(\"\");\r\n  const [tradeChecked, setTradeChecked] = useState(\"\");\r\n  const [groupChecked, setGroupChecked] = useState(\"\");\r\n  const [dateChecked, setDateChecked] = useState(\"\");\r\n\r\n  const [budget1, setBudget1] = useState(0);\r\n  const [budget2, setBudget2] = useState(10000);\r\n  const [slider, setSlider] = useState([0, 10000]);\r\n\r\n  const checked = { backgroundColor: \"black\", color: \"white\" };\r\n  const unChecked = { backgroundColor: \"white\", color: \"black\" };\r\n\r\n  const tagRender = (props) => {\r\n    const { label, value } = props;\r\n    const onClose = (e) => {\r\n      switch (label) {\r\n        case cityChecked:\r\n          setCityChecked(\"\");\r\n          break;\r\n        case hotelChecked:\r\n          setHotelChecked(\"\");\r\n          break;\r\n        case tradeChecked:\r\n          setTradeChecked(\"\");\r\n          break;\r\n        case groupChecked:\r\n          setGroupChecked(\"\");\r\n          break;\r\n        case dateChecked:\r\n          setDateChecked(\"\");\r\n          break;\r\n        default:\r\n          setBudget1(0)\r\n          setBudget2(10000)\r\n          break;\r\n      }\r\n    };\r\n    switch (label) {\r\n      case \"\":\r\n        return null;\r\n      case \"0元 到 10000元 \":\r\n        return null;\r\n      default:\r\n        console.log(label);\r\n        return (\r\n          <Tag\r\n            color={value}\r\n            closable={true}\r\n            onClose={onClose}\r\n            style={{\r\n              color: \"white\",\r\n              fontSize: \"15px\",\r\n              backgroundColor: \"black\",\r\n            }}\r\n          >\r\n            {label}\r\n          </Tag>\r\n        );\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className=\"background\"\r\n      style={{ minWidth: \"900px\", minHeight: \"800px\" }}\r\n    >\r\n      <img src={Logo} alt=\"\" className=\"logo\" />\r\n      {/* 快捷搜索/代码搜索 */}\r\n      <div className=\"searchArea\">\r\n        <Input className=\"input\" />\r\n        <Button className=\"button\">搜索</Button>\r\n      </div>\r\n      {/* <Row gutter={16} className=\"buttonArea\">\r\n        <Col span={10}>\r\n          <Button\r\n            className=\"simple\"\r\n            style={buttonChecked === 1 ? checked : unChecked}\r\n            onClick={() => {\r\n              setbuttonChecked(1);\r\n            }}\r\n          >\r\n            基础\r\n          </Button>\r\n        </Col>\r\n        <Col span={4}>&nbsp;</Col>\r\n        <Col span={10}>\r\n          <Button\r\n            className=\"advance\"\r\n            style={buttonChecked === 2 ? checked : unChecked}\r\n            onClick={() => {\r\n              setbuttonChecked(2);\r\n            }}\r\n          >\r\n            高级\r\n          </Button>\r\n        </Col>\r\n      </Row> */}\r\n      <Card className=\"card\">\r\n        <div className=\"chosen-area\">\r\n          <label\r\n            className=\"chosen-label\"\r\n            style={{ fontWeight: \"900\", fontSize: \"18px\" }}\r\n            key=\"chosen-label\"\r\n          >\r\n            已选条件：\r\n          </label>\r\n          <Select\r\n            tagRender={tagRender}\r\n            mode=\"multiple\"\r\n            className=\"chosen-fields\"\r\n            placeholder=\"Please select\"\r\n            value={[\r\n              cityChecked,\r\n              hotelChecked,\r\n              tradeChecked,\r\n              groupChecked,\r\n              `${budget1}元 到 ${budget2}元 `,\r\n              dateChecked,\r\n              \r\n            ]}\r\n            onChange={handleChange}\r\n            bordered={false}\r\n            open={false}\r\n            disabled\r\n            key=\"select\"\r\n          />\r\n        </div>\r\n        <div className=\"form\">\r\n          <div\r\n            className=\"inputArea\"\r\n            style={{ top: \"0\", left: 0 }}\r\n            key=\"cityArea\"\r\n          >\r\n            <Row className=\"row\" style={{ top: 0, left: 0 }} key=\"city-row\">\r\n              <Col\r\n                span={4}\r\n                style={{ display: \"flex\", alignSelf: \"center\" }}\r\n                key=\"city-label-col\"\r\n              >\r\n                <label\r\n                  key=\"city-label\"\r\n                  style={{\r\n                    height: \"100%\",\r\n                    fontWeight: \"900\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  城市：\r\n                </label>\r\n              </Col>\r\n              {city.map((item, index) => {\r\n                return (\r\n                  <Col\r\n                    span={5}\r\n                    key={\"city-col-\" + index.toString()}\r\n                    style={{ display: \"flex\", alignSelf: \"center\" }}\r\n                  >\r\n                    <Button\r\n                      key={\"city-button-\" + index.toString()}\r\n                      type=\"text\"\r\n                      onClick={() => {\r\n                        setCityChecked(item);\r\n                      }}\r\n                    >\r\n                      {item}\r\n                    </Button>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n            <Input className=\"form-input\" key=\"city\" />\r\n          </div>\r\n          <div\r\n            className=\"inputArea\"\r\n            style={{ top: \"16%\", left: 0 }}\r\n            key=\"hotelArea\"\r\n          >\r\n            <Row className=\"row\" gutter={[16]} key=\"hotel-row\">\r\n              <Col\r\n                span={4}\r\n                style={{ display: \"flex\", alignSelf: \"center\" }}\r\n                key=\"hotel-label-col\"\r\n              >\r\n                <label\r\n                  key=\"hotel-label\"\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    fontWeight: \"900\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  酒店：\r\n                </label>\r\n              </Col>\r\n              {hotel.map((item, index) => {\r\n                return (\r\n                  <Col\r\n                    span={10}\r\n                    key={\"hotel-col-\" + index.toString()}\r\n                    style={{ display: \"flex\", alignSelf: \"center\" }}\r\n                  >\r\n                    <Button\r\n                      key={\"hotel-button-\" + index.toString()}\r\n                      type=\"text\"\r\n                      onClick={() => {\r\n                        setHotelChecked(item);\r\n                      }}\r\n                    >\r\n                      {item}\r\n                    </Button>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n            <Input className=\"form-input\" key=\"hotel\" />\r\n          </div>\r\n          <div\r\n            className=\"inputArea\"\r\n            style={{ top: \"32%\", left: 0 }}\r\n            key=\"tradeArea\"\r\n          >\r\n            <Row className=\"row\" key=\"trade-row\">\r\n              <Col span={4} style={{ display: \"flex\" }} key=\"trade-label-col\">\r\n                <label\r\n                  key=\"trade-label\"\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    fontWeight: \"900\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  商圈：\r\n                </label>\r\n              </Col>\r\n              {trade.map((item, index) => {\r\n                return (\r\n                  <Col\r\n                    span={5}\r\n                    key={\"trade-col-\" + index.toString()}\r\n                    style={{ display: \"flex\", alignSelf: \"center\" }}\r\n                  >\r\n                    <Button\r\n                      key={\"trade-button-\" + index.toString()}\r\n                      type=\"text\"\r\n                      onClick={() => {\r\n                        setTradeChecked(item);\r\n                      }}\r\n                    >\r\n                      {item}\r\n                    </Button>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n            <Input className=\"form-input\" key=\"trade\" />\r\n          </div>\r\n          <div\r\n            className=\"inputArea\"\r\n            style={{ top: \"48%\", left: 0 }}\r\n            key=\"groupArea\"\r\n          >\r\n            <Row className=\"row\" key=\"group-row\">\r\n              <Col span={4} style={{ display: \"flex\" }} key=\"group-label-col\">\r\n                <label\r\n                  key=\"group-label\"\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    fontWeight: \"900\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  集团：\r\n                </label>\r\n              </Col>\r\n              {group.map((item, index) => {\r\n                return (\r\n                  <Col\r\n                    span={5}\r\n                    key={\"group-col-\" + index.toString()}\r\n                    style={{ display: \"flex\", alignSelf: \"center\" }}\r\n                  >\r\n                    <Button\r\n                      key={\"group-button-\" + index.toString()}\r\n                      type=\"text\"\r\n                      onClick={() => {\r\n                        setGroupChecked(item);\r\n                      }}\r\n                    >\r\n                      {item}\r\n                    </Button>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n            <Input className=\"form-input\" key=\"group\" />\r\n          </div>\r\n          <div\r\n            className=\"inputArea\"\r\n            style={{ top: \"64%\", left: 0 }}\r\n            key=\"groupArea\"\r\n          >\r\n            <Row className=\"row\" key=\"group-row\">\r\n              <Col span={4} style={{ display: \"flex\" }} key=\"group-label-col\">\r\n                <label\r\n                  key=\"group-label\"\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    fontWeight: \"900\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  预算：\r\n                </label>\r\n              </Col>\r\n              <Col span={20} style={{ display: \"flex\" }}>\r\n                <Slider\r\n                  range\r\n                  defaultValue={[0, 10000]}\r\n                  step={50}\r\n                  min={0}\r\n                  max={10000}\r\n                  value={slider}\r\n                  onChange={(value) => {\r\n                    setBudget1(value[0]);\r\n                    setBudget2(value[1]);\r\n                    setSlider(value);\r\n                  }}\r\n                  style={{ alignSelf: \"center\", width: \"100%\" }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <div className=\"form-input\">\r\n              <InputNumber\r\n                style={{ height: \"45%\", width: \"42.5%\", alignSelf: \"center\" }}\r\n                key=\"budget1\"\r\n                value={budget1}\r\n                step={50}\r\n                onChange={(value) => {\r\n                  setBudget1(value);\r\n                  setSlider([budget1, budget2]);\r\n                }}\r\n              />\r\n              <ArrowRightOutlined\r\n                style={{\r\n                  alignSelf: \"center\",\r\n                  margin: \"20px auto\",\r\n                  width: \"15%\",\r\n                }}\r\n              />\r\n              <InputNumber\r\n                key=\"budget2\"\r\n                style={{ height: \"45%\", width: \"42.5%\", alignSelf: \"center\" }}\r\n                step={50}\r\n                value={budget2}\r\n                onChange={(value) => {\r\n                  setBudget2(value);\r\n                  setSlider([budget1, budget2]);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"inputArea\"\r\n            style={{ top: \"80%\", left: 0 }}\r\n            key=\"dateArea\"\r\n          >\r\n            <Row className=\"row\" key=\"date-row\">\r\n              <Col span={4} style={{ display: \"flex\" }} key=\"date-label-col\">\r\n                <label\r\n                  key=\"date-label\"\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    fontWeight: \"900\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  日期：\r\n                </label>\r\n              </Col>\r\n              <Col span={20} style={{ display: \"flex\" }} key=\"date-col\">\r\n                <RangePicker\r\n                  key=\"1\"\r\n                  style={{ alignSelf: \"center\" }}\r\n                  disabledDate={disabledDate}\r\n                  defaultValue={[\r\n                    moment(moment(), dateFormat),\r\n                    moment(moment().add(1, \"days\"), dateFormat),\r\n                  ]}\r\n                  bordered={false}\r\n                  format={dateFormat}\r\n                  onCalendarChange={(dates, dateString, info) => {\r\n                    switch (dateString[1]) {\r\n                      case dateString[0]:\r\n                        setDateChecked(\r\n                          `${dateString[0]} 入住 ${dates[1]\r\n                            .add(1, \"days\")\r\n                            .format(dateFormat)} 离开`\r\n                        );\r\n                        break;\r\n                      case \"\":\r\n                        setDateChecked(\r\n                          `${dateString[0]} 入住 ${dates[0]\r\n                            .add(1, \"days\")\r\n                            .format(dateFormat)} 离开`\r\n                        );\r\n                        break;\r\n                      default:\r\n                        setDateChecked(\r\n                          `${dateString[0]} 入住 ${dateString[1]} 离开`\r\n                        );\r\n                        break;\r\n                    }\r\n                  }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Button\r\n              className=\"form-submit\"\r\n              key=\"date\"\r\n              onClick={() => {\r\n                props.history.push(\"/result\");\r\n              }}\r\n            >\r\n              搜索\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Search);\r\n","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\result\\result.js",["63","64","65","66","67","68","69","70"],"import { useState } from \"react\";\r\nimport \"./result.css\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  AutoComplete,\r\n  Button,\r\n  Input,\r\n  Card,\r\n  Select,\r\n  DatePicker,\r\n  Table,\r\n  Tag,\r\n  Space,\r\n  Typography,\r\n  Dropdown,\r\n  Menu,\r\n  InputNumber,\r\n  Badge,\r\n} from \"antd\";\r\nimport Logo from \"./static/logo.png\";\r\nimport moment from \"moment\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport hotelJPG from \"./static/广州东圃合景福朋喜来登酒店_2.jpg\";\r\nimport { EnvironmentFilled } from \"@ant-design/icons\";\r\nimport ProTable, { ProColumns, TableDropdown } from \"@ant-design/pro-table\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Text } = Typography;\r\nconst { Header, Footer } = Layout;\r\nconst dateFormat = \"YYYY/MM/DD\";\r\nconst { Paragraph } = Typography;\r\n\r\nfunction disabledDate(current) {\r\n  // Can not select days before today and today\r\n  return current && current < moment().add(-1, \"days\").endOf(\"day\");\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: \"房型\",\r\n    dataIndex: \"room\",\r\n    key: \"room\",\r\n    align: \"center\",\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: \"价格类型\",\r\n    dataIndex: \"priceType\",\r\n    key: \"priceType\",\r\n    align: \"center\",\r\n  },\r\n  {\r\n    title: \"价格\",\r\n    dataIndex: \"price\",\r\n    key: \"price\",\r\n    align: \"center\",\r\n  },\r\n  {\r\n    title: \"房态\",\r\n    key: \"tags\",\r\n    dataIndex: \"tags\",\r\n    align: \"center\",\r\n    render: (tags) => (\r\n      <Space direction=\"horizontal\">\r\n        <Avatar\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginLeft: \"auto\",\r\n            backgroundColor: \"red\",\r\n          }}\r\n        >\r\n          10\r\n        </Avatar>\r\n        <Avatar\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginLeft: \"auto\",\r\n            backgroundColor: \"red\",\r\n          }}\r\n        >\r\n          10\r\n        </Avatar>\r\n        <Avatar\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginLeft: \"auto\",\r\n            backgroundColor: \"red\",\r\n          }}\r\n        >\r\n          10\r\n        </Avatar>\r\n        <Avatar\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginLeft: \"auto\",\r\n            backgroundColor: \"red\",\r\n          }}\r\n        >\r\n          10\r\n        </Avatar>\r\n        <Avatar\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginLeft: \"auto\",\r\n            backgroundColor: \"red\",\r\n          }}\r\n        >\r\n          10\r\n        </Avatar>\r\n        <Avatar\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginLeft: \"auto\",\r\n            backgroundColor: \"red\",\r\n          }}\r\n        >\r\n          10\r\n        </Avatar>\r\n        <Avatar\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginLeft: \"auto\",\r\n            backgroundColor: \"red\",\r\n          }}\r\n        >\r\n          10\r\n        </Avatar>\r\n      </Space>\r\n    ),\r\n  },\r\n\r\n  {\r\n    title: \"价格等级\",\r\n    dataIndex: \"priceLevel\",\r\n    key: \"priceLevel\",\r\n    align: \"center\",\r\n    render: (text, record) => (\r\n      <Tag color='gold'>SS</Tag>\r\n    ),\r\n  },\r\n  {\r\n    title: \"预估客户等级\",\r\n    dataIndex: \"customerLevel\",\r\n    key: \"customerLevel\",\r\n    align: \"center\",\r\n    render: (text, record) => (\r\n      <Tag color='gold'>AA</Tag>\r\n    ),\r\n  },\r\n  {\r\n    title: \"操作\",\r\n    key: \"action\",\r\n    align: \"center\",\r\n    render: (text, record) => (\r\n      <Space size=\"middle\">\r\n        <Button>询价</Button>\r\n      </Space>\r\n    ),\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: \"1\",\r\n    name: \"John Brown\",\r\n    age: 32,\r\n    address: \"New York No. 1 Lake Park\",\r\n    tags: [\"nice\", \"developer\"],\r\n  },\r\n  {\r\n    key: \"2\",\r\n    name: \"Jim Green\",\r\n    age: 42,\r\n    address: \"London No. 1 Lake Park\",\r\n    tags: [\"loser\"],\r\n  },\r\n  {\r\n    key: \"3\",\r\n    name: \"Joe Black\",\r\n    age: 32,\r\n    address: \"Sidney No. 1 Lake Park\",\r\n    tags: [\"cool\", \"teacher\"],\r\n  },\r\n];\r\n\r\nconst menu = (\r\n  <Menu className=\"result-dropdown\">\r\n    <Menu.Item\r\n      onClick={{}}\r\n      style={{\r\n        position: \"relative\",\r\n        width: \"100px\",\r\n        height: \"60px\",\r\n        borderRadius: \"10px\",\r\n      }}\r\n    >\r\n      <Text\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"20px\",\r\n          height: \"40px\",\r\n          bottom: 0,\r\n          right: 0,\r\n          left: 0,\r\n        }}\r\n      >\r\n        上传头像\r\n      </Text>\r\n    </Menu.Item>\r\n    <Menu.Item\r\n      onClick={{}}\r\n      style={{\r\n        position: \"relative\",\r\n        width: \"100px\",\r\n        height: \"60px\",\r\n        borderRadius: \"10px\",\r\n      }}\r\n    >\r\n      <Text\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"20px\",\r\n          height: \"40px\",\r\n          bottom: 0,\r\n          right: 0,\r\n          left: 0,\r\n        }}\r\n      >\r\n        修改密码\r\n      </Text>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nconst TitleRender = (props) => {\r\n  return (\r\n    <Row style={{ height: \"200px\", width: \"100%\" }}>\r\n      <Col span={6} style={{ display: \"flex\" }}>\r\n        <img\r\n          src={hotelJPG}\r\n          alt=\"\"\r\n          style={{\r\n            height: \"200px\",\r\n            width: \"65%\",\r\n            alignSelf: \"center\",\r\n            alignItems: \"center\",\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n      </Col>\r\n      <Col span={18}>\r\n        <Row gutter={[16, 10]}>\r\n          <Col span={24} style={{ display: \"flex\" }}>\r\n            <Text\r\n              style={{\r\n                fontSize: \"20px\",\r\n                fontWeight: \"700\",\r\n                alignSelf: \"center\",\r\n                display: \"flex\",\r\n              }}\r\n            >\r\n              广州东圃合景福朋喜来登酒店&nbsp;\r\n              {\r\n                <Tag color=\"gold\" style={{ alignSelf: \"center\" }}>\r\n                  SSS\r\n                </Tag>\r\n              }\r\n            </Text>\r\n          </Col>\r\n          <Col span={24} style={{ display: \"flex\" }}>\r\n            <Paragraph style={{ alignSelf: \"center\" }}>\r\n              备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注\r\n            </Paragraph>\r\n          </Col>\r\n          <Col span={24} style={{ display: \"flex\" }}>\r\n            <Paragraph style={{ alignSelf: \"center\" }}>\r\n              备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注备注\r\n            </Paragraph>\r\n          </Col>\r\n          <Col span={12} style={{ display: \"flex\" }}>\r\n            <Tag\r\n              style={{ alignSelf: \"center\", height: \"25px\", fontSize: \"13px\" }}\r\n            >\r\n              地铁周边\r\n            </Tag>\r\n          </Col>\r\n          <Col span={12} style={{ display: \"flex\" }}>\r\n            <Tag\r\n              style={{ alignSelf: \"center\", height: \"25px\", fontSize: \"13px\" }}\r\n            >\r\n              亲子套房\r\n            </Tag>\r\n          </Col>\r\n          <Col span={24} style={{ display: \"flex\" }}>\r\n            <Text style={{ alignSelf: \"center\", height: \"30px\" }}>\r\n              {<EnvironmentFilled />} 广州市东圃汇彩路菁映路1号\r\n            </Text>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst Result = () => {\r\n  const [dateChecked, setDateChecked] = useState(\"\");\r\n  const [pageDate, setPageDate] = useState([\r\n    moment(moment(), dateFormat),\r\n    moment(moment().add(1, \"days\"), dateFormat),\r\n  ]);\r\n  return (\r\n    <Layout style={{ position: \"relative\", height: \"100%\", width: \"100%\" }}>\r\n      <Header className=\"result-header\" theme=\"light\">\r\n        <img src={Logo} alt=\"\" className=\"result-img\" />\r\n        <Row className=\"result-avatar\" gutter={16}>\r\n          <Col xs={12} sm={10} md={10} lg={8} xl={7} xxl={6}>\r\n            <Avatar\r\n              size={{ xs: 30, sm: 30, md: 35, lg: 35, xl: 40, xxl: 50 }}\r\n            />\r\n          </Col>\r\n          <Col xs={12} sm={14} md={14} lg={16} xl={17} xxl={18}>\r\n            <Dropdown overlay={menu} placement=\"bottomCenter\" arrow>\r\n              <Text className=\"result-workerNumber\">工号位置</Text>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n      <section className=\"result-content\">\r\n        <Input.Group compact={true} className=\"InputGroup\">\r\n          <AutoComplete\r\n            style={{ width: \"10%\", height: \"100%\" }}\r\n            children={\r\n              <Input\r\n                style={{ height: \"50px\", fontSize: \"16px\" }}\r\n                placeholder=\"城市\"\r\n              />\r\n            }\r\n          />\r\n          <AutoComplete\r\n            style={{ width: \"25%\", height: \"100%\" }}\r\n            children={\r\n              <Input\r\n                style={{ height: \"50px\", fontSize: \"16px\" }}\r\n                placeholder=\"酒店\"\r\n              />\r\n            }\r\n          />\r\n          <AutoComplete\r\n            style={{ width: \"15%\", height: \"100%\" }}\r\n            children={\r\n              <Input\r\n                style={{ height: \"50px\", fontSize: \"16px\" }}\r\n                placeholder=\"商圈\"\r\n              />\r\n            }\r\n          />\r\n          <AutoComplete\r\n            style={{ width: \"10%\", height: \"100%\" }}\r\n            children={\r\n              <Input\r\n                style={{ height: \"50px\", fontSize: \"16px\" }}\r\n                placeholder=\"集团\"\r\n              />\r\n            }\r\n          />\r\n          <RangePicker\r\n            key=\"1\"\r\n            style={{\r\n              alignSelf: \"center\",\r\n              height: \"50px\",\r\n              width: \"30%\",\r\n              textAlign: \"center\",\r\n            }}\r\n            disabledDate={disabledDate}\r\n            value={pageDate}\r\n            className=\"result-rangePicker\"\r\n            inputReadOnly\r\n            format={dateFormat}\r\n            onCalendarChange={(dates, dateString, info) => {\r\n              switch (dateString[1]) {\r\n                case dateString[0]:\r\n                  setDateChecked(\r\n                    `${dateString[0]} 入住 ${dates[1]\r\n                      .add(1, \"days\")\r\n                      .format(dateFormat)} 离开`\r\n                  );\r\n                  setPageDate([dates[0], dates[1].add(1, \"days\")]);\r\n                  break;\r\n                case \"\":\r\n                  setDateChecked(\r\n                    `${dateString[0]} 入住 ${dates[0]\r\n                      .add(1, \"days\")\r\n                      .format(dateFormat)} 离开`\r\n                  );\r\n                  setPageDate([dateString[0], dates[0].add(1, \"days\")]);\r\n                  break;\r\n                default:\r\n                  setDateChecked(`${dateString[0]} 入住 ${dateString[1]} 离开`);\r\n                  setPageDate(dates);\r\n                  break;\r\n              }\r\n            }}\r\n          />\r\n          <Button style={{ height: \"50px\", width: \"10%\" }}>123</Button>\r\n        </Input.Group>\r\n        <Space\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"10%\",\r\n            left: \"20%\",\r\n            minWidth: \"800px\",\r\n            width: \"60%\",\r\n          }}\r\n          direction=\"vertical\"\r\n        >\r\n          <Card className=\"result-card\" hoverable title={<TitleRender />}>\r\n            <div style={{ display: \"flex\" }}>\r\n              <Text\r\n                style={{\r\n                  alignSelf: \"center\",\r\n                  fontSize: \"20px\",\r\n                  fontWeight: \"700\",\r\n                }}\r\n              >\r\n                房价详情\r\n              </Text>\r\n              <RangePicker\r\n                style={{ alignSelf: \"center\", marginLeft: \"auto\" }}\r\n                disabledDate={disabledDate}\r\n                value={pageDate}\r\n                className=\"result-rangePicker\"\r\n                inputReadOnly\r\n                format={dateFormat}\r\n                onCalendarChange={(dates, dateString, info) => {\r\n                  switch (dateString[1]) {\r\n                    case dateString[0]:\r\n                      setDateChecked(\r\n                        `${dateString[0]} 入住 ${dates[1]\r\n                          .add(1, \"days\")\r\n                          .format(dateFormat)} 离开`\r\n                      );\r\n                      setPageDate([dates[0], dates[1].add(1, \"days\")]);\r\n                      break;\r\n                    case \"\":\r\n                      setDateChecked(\r\n                        `${dateString[0]} 入住 ${dates[0]\r\n                          .add(1, \"days\")\r\n                          .format(dateFormat)} 离开`\r\n                      );\r\n                      setPageDate([dateString[0], dates[0].add(1, \"days\")]);\r\n                      break;\r\n                    default:\r\n                      setDateChecked(\r\n                        `${dateString[0]} 入住 ${dateString[1]} 离开`\r\n                      );\r\n                      setPageDate(dates);\r\n                      break;\r\n                  }\r\n                }}\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button style={{ alignSelf: \"center\", width: \"5%\" }}>查询</Button>\r\n            </div>\r\n            <div>&nbsp;</div>\r\n            <Table columns={columns} dataSource={data} pagination={false} />\r\n          </Card>\r\n          <Card className=\"result-card\" hoverable title={<TitleRender />}>\r\n            <div style={{ display: \"flex\" }}>\r\n              <Text\r\n                style={{\r\n                  alignSelf: \"center\",\r\n                  fontSize: \"20px\",\r\n                  fontWeight: \"700\",\r\n                }}\r\n              >\r\n                房价详情\r\n              </Text>\r\n              <RangePicker\r\n                style={{ alignSelf: \"center\", marginLeft: \"auto\" }}\r\n                disabledDate={disabledDate}\r\n                value={pageDate}\r\n                className=\"result-rangePicker\"\r\n                inputReadOnly\r\n                format={dateFormat}\r\n                onCalendarChange={(dates, dateString, info) => {\r\n                  switch (dateString[1]) {\r\n                    case dateString[0]:\r\n                      setDateChecked(\r\n                        `${dateString[0]} 入住 ${dates[1]\r\n                          .add(1, \"days\")\r\n                          .format(dateFormat)} 离开`\r\n                      );\r\n                      setPageDate([dates[0], dates[1].add(1, \"days\")]);\r\n                      break;\r\n                    case \"\":\r\n                      setDateChecked(\r\n                        `${dateString[0]} 入住 ${dates[0]\r\n                          .add(1, \"days\")\r\n                          .format(dateFormat)} 离开`\r\n                      );\r\n                      setPageDate([dateString[0], dates[0].add(1, \"days\")]);\r\n                      break;\r\n                    default:\r\n                      setDateChecked(\r\n                        `${dateString[0]} 入住 ${dateString[1]} 离开`\r\n                      );\r\n                      setPageDate(dates);\r\n                      break;\r\n                  }\r\n                }}\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button style={{ alignSelf: \"center\", width: \"5%\" }}>查询</Button>\r\n            </div>\r\n            <div>&nbsp;</div>\r\n            <Table columns={columns} dataSource={data} pagination={false} />\r\n          </Card>\r\n          <Card className=\"result-card\" hoverable title={<TitleRender />}>\r\n            <div style={{ display: \"flex\" }}>\r\n              <Text\r\n                style={{\r\n                  alignSelf: \"center\",\r\n                  fontSize: \"20px\",\r\n                  fontWeight: \"700\",\r\n                }}\r\n              >\r\n                房价详情\r\n              </Text>\r\n              <RangePicker\r\n                style={{ alignSelf: \"center\", marginLeft: \"auto\" }}\r\n                disabledDate={disabledDate}\r\n                value={pageDate}\r\n                className=\"result-rangePicker\"\r\n                inputReadOnly\r\n                format={dateFormat}\r\n                onCalendarChange={(dates, dateString, info) => {\r\n                  switch (dateString[1]) {\r\n                    case dateString[0]:\r\n                      setDateChecked(\r\n                        `${dateString[0]} 入住 ${dates[1]\r\n                          .add(1, \"days\")\r\n                          .format(dateFormat)} 离开`\r\n                      );\r\n                      setPageDate([dates[0], dates[1].add(1, \"days\")]);\r\n                      break;\r\n                    case \"\":\r\n                      setDateChecked(\r\n                        `${dateString[0]} 入住 ${dates[0]\r\n                          .add(1, \"days\")\r\n                          .format(dateFormat)} 离开`\r\n                      );\r\n                      setPageDate([dateString[0], dates[0].add(1, \"days\")]);\r\n                      break;\r\n                    default:\r\n                      setDateChecked(\r\n                        `${dateString[0]} 入住 ${dateString[1]} 离开`\r\n                      );\r\n                      setPageDate(dates);\r\n                      break;\r\n                  }\r\n                }}\r\n              />\r\n              <div>&nbsp;</div>\r\n              <Button style={{ alignSelf: \"center\", width: \"5%\" }}>查询</Button>\r\n            </div>\r\n            <div>&nbsp;</div>\r\n            <Table columns={columns} dataSource={data} pagination={false} />\r\n          </Card>\r\n        </Space>\r\n        <Footer>&nbsp;</Footer>\r\n      </section>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withRouter(Result);\r\n","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\dataCenter\\loginMessage.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":20,"nodeType":"77","messageId":"78","endLine":1,"endColumn":29},{"ruleId":"75","severity":1,"message":"79","line":26,"column":11,"nodeType":"77","messageId":"78","endLine":26,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":1,"column":20,"nodeType":"77","messageId":"78","endLine":1,"endColumn":29},{"ruleId":"75","severity":1,"message":"80","line":18,"column":8,"nodeType":"77","messageId":"78","endLine":18,"endColumn":13},{"ruleId":"75","severity":1,"message":"81","line":19,"column":8,"nodeType":"77","messageId":"78","endLine":19,"endColumn":13},{"ruleId":"75","severity":1,"message":"82","line":20,"column":8,"nodeType":"77","messageId":"78","endLine":20,"endColumn":15},{"ruleId":"75","severity":1,"message":"83","line":21,"column":8,"nodeType":"77","messageId":"78","endLine":21,"endColumn":15},{"ruleId":"75","severity":1,"message":"84","line":22,"column":8,"nodeType":"77","messageId":"78","endLine":22,"endColumn":15},{"ruleId":"75","severity":1,"message":"85","line":42,"column":9,"nodeType":"77","messageId":"78","endLine":42,"endColumn":16},{"ruleId":"75","severity":1,"message":"86","line":220,"column":21,"nodeType":"77","messageId":"78","endLine":220,"endColumn":32},{"ruleId":"75","severity":1,"message":"87","line":2,"column":36,"nodeType":"77","messageId":"78","endLine":2,"endColumn":44},{"ruleId":"75","severity":1,"message":"88","line":42,"column":10,"nodeType":"77","messageId":"78","endLine":42,"endColumn":23},{"ruleId":"75","severity":1,"message":"89","line":42,"column":25,"nodeType":"77","messageId":"78","endLine":42,"endColumn":41},{"ruleId":"75","severity":1,"message":"90","line":43,"column":16,"nodeType":"77","messageId":"78","endLine":43,"endColumn":23},{"ruleId":"75","severity":1,"message":"91","line":44,"column":17,"nodeType":"77","messageId":"78","endLine":44,"endColumn":25},{"ruleId":"75","severity":1,"message":"92","line":45,"column":17,"nodeType":"77","messageId":"78","endLine":45,"endColumn":25},{"ruleId":"75","severity":1,"message":"93","line":46,"column":17,"nodeType":"77","messageId":"78","endLine":46,"endColumn":25},{"ruleId":"75","severity":1,"message":"94","line":58,"column":9,"nodeType":"77","messageId":"78","endLine":58,"endColumn":16},{"ruleId":"75","severity":1,"message":"95","line":59,"column":9,"nodeType":"77","messageId":"78","endLine":59,"endColumn":18},{"ruleId":"75","severity":1,"message":"96","line":12,"column":3,"nodeType":"77","messageId":"78","endLine":12,"endColumn":9},{"ruleId":"75","severity":1,"message":"97","line":20,"column":3,"nodeType":"77","messageId":"78","endLine":20,"endColumn":14},{"ruleId":"75","severity":1,"message":"98","line":21,"column":3,"nodeType":"77","messageId":"78","endLine":21,"endColumn":8},{"ruleId":"75","severity":1,"message":"99","line":28,"column":8,"nodeType":"77","messageId":"78","endLine":28,"endColumn":16},{"ruleId":"75","severity":1,"message":"100","line":28,"column":20,"nodeType":"77","messageId":"78","endLine":28,"endColumn":30},{"ruleId":"75","severity":1,"message":"101","line":28,"column":32,"nodeType":"77","messageId":"78","endLine":28,"endColumn":45},{"ruleId":"102","severity":1,"message":"103","line":47,"column":23,"nodeType":"104","endLine":47,"endColumn":26},{"ruleId":"75","severity":1,"message":"105","line":309,"column":10,"nodeType":"77","messageId":"78","endLine":309,"endColumn":21},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","'icon2' is defined but never used.","'icon3' is defined but never used.","'icon1_1' is defined but never used.","'icon2_2' is defined but never used.","'icon3_3' is defined but never used.","'TabPane' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'Redirect' is defined but never used.","'buttonChecked' is assigned a value but never used.","'setbuttonChecked' is assigned a value but never used.","'setCity' is assigned a value but never used.","'setHotel' is assigned a value but never used.","'setTrade' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'checked' is assigned a value but never used.","'unChecked' is assigned a value but never used.","'Select' is defined but never used.","'InputNumber' is defined but never used.","'Badge' is defined but never used.","'ProTable' is defined but never used.","'ProColumns' is defined but never used.","'TableDropdown' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'dateChecked' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]