[{"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\index.js":"1","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\reportWebVitals.js":"2","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\login\\App.js":"3","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\person-center\\Center.js":"4","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\Router\\router.js":"5","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\person-center\\Logger.js":"6","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\search\\search.js":"7","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\result\\result.js":"8"},{"size":472,"mtime":1607066663746,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":4264,"mtime":1607332373202,"results":"12","hashOfConfig":"10"},{"size":14249,"mtime":1607770702613,"results":"13","hashOfConfig":"10"},{"size":628,"mtime":1607742333772,"results":"14","hashOfConfig":"10"},{"size":3207,"mtime":1607405016753,"results":"15","hashOfConfig":"10"},{"size":15196,"mtime":1607777840804,"results":"16","hashOfConfig":"10"},{"size":17475,"mtime":1608097290878,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"10rx9p0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\index.js",[],["37","38"],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\reportWebVitals.js",[],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\login\\App.js",[],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\person-center\\Center.js",["39","40","41","42","43"],"import { useState } from \"react\";\r\nimport \"./Center.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  Table,\r\n  Layout,\r\n  Typography,\r\n  Menu,\r\n  Dropdown,\r\n  Tabs,\r\n  Card,\r\n} from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport Logo from \"./static/logo.png\";\r\nimport icon1 from \"./static/icon1.png\";\r\nimport icon2 from \"./static/icon2.png\";\r\nimport icon3 from \"./static/icon3.png\";\r\nimport icon1_1 from \"./static/icon1-1.png\";\r\nimport icon2_2 from \"./static/icon2-2.png\";\r\nimport icon3_3 from \"./static/icon3-3.png\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport QueueAnim from \"rc-queue-anim\";\r\nimport Logger from \"./Logger\";\r\nimport { UserOutlined, FileTextFilled, DesktopOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Text } = Typography;\r\nconst { Header, Sider, Content } = Layout;\r\nconst { TabPane } = Tabs;\r\n\r\nconst menu = (\r\n  <Menu className=\"dropdown\">\r\n    <Menu.Item\r\n      onClick={{}}\r\n      style={{\r\n        position: \"relative\",\r\n        width: \"100px\",\r\n        height: \"60px\",\r\n        borderRadius: \"10px\",\r\n      }}\r\n    >\r\n      <Text\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"20px\",\r\n          height: \"40px\",\r\n          bottom: 0,\r\n          right: 0,\r\n          left: 0,\r\n        }}\r\n      >\r\n        上传头像\r\n      </Text>\r\n    </Menu.Item>\r\n    <Menu.Item\r\n      onClick={{}}\r\n      style={{\r\n        position: \"relative\",\r\n        width: \"100px\",\r\n        height: \"60px\",\r\n        borderRadius: \"10px\",\r\n      }}\r\n    >\r\n      <Text\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"20px\",\r\n          height: \"40px\",\r\n          bottom: 0,\r\n          right: 0,\r\n          left: 0,\r\n        }}\r\n      >\r\n        修改密码\r\n      </Text>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Full Name\",\r\n    textWrap: \"word-break\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n  },\r\n  {\r\n    title: \"Age\",\r\n    textWrap: \"word-break\",\r\n    dataIndex: \"age\",\r\n    key: \"age\",\r\n  },\r\n  {\r\n    title: \"Column 1\",\r\n    dataIndex: \"address\",\r\n    key: \"1\",\r\n    textWrap: \"word-break\",\r\n  },\r\n  {\r\n    title: \"Column 2\",\r\n    dataIndex: \"address\",\r\n    key: \"2\",\r\n    textWrap: \"word-break\",\r\n  },\r\n\r\n  {\r\n    title: \"Action\",\r\n    key: \"operation\",\r\n    textWrap: \"word-break\",\r\n    // eslint-disable-next-line\r\n    render: () => <a>action</a>,\r\n  },\r\n];\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 100; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `Edrward ${i}`,\r\n    age: 32,\r\n    address: `London Park no. ${i}`,\r\n  });\r\n}\r\n\r\nconst Center = (props) => {\r\n  const [logger, setlogger] = useState(false);\r\n  const [states, setStates] = useState({\r\n    area1: \"before\",\r\n    area2: \"after\",\r\n    area3: \"before\",\r\n  });\r\n  return (\r\n    <Layout className=\"main\">\r\n      <Header className=\"header\">\r\n        <img src={Logo} alt=\"\" className=\"img\" />\r\n        <Row className=\"avatar\" gutter={16}>\r\n          <Col xs={12} sm={10} md={10} lg={8} xl={7} xxl={6}>\r\n            <Avatar\r\n              src={<img src={icon1} alt=\"\" />}\r\n              size={{ xs: 30, sm: 30, md: 35, lg: 35, xl: 40, xxl: 50 }}\r\n            />\r\n          </Col>\r\n          <Col xs={12} sm={14} md={14} lg={16} xl={17} xxl={18}>\r\n            <Dropdown overlay={menu} placement=\"bottomCenter\" arrow>\r\n              <Text className=\"workerNumber\">工号位置</Text>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n      <Layout className=\"body\">\r\n        <Sider className=\"side\" width=\"3vw\" style={{ minWidth: \"50px\" }}>\r\n          <Menu className=\"menu\" theme=\"dark\" defaultSelectedKeys=\"2\">\r\n            <Menu.Item\r\n              key=\"1\"\r\n              style={{\r\n                position: \"absolute\",\r\n                height: \"12.5%\",\r\n                width: \"100%\",\r\n                paddingLeft: 0,\r\n                paddingTop: 0,\r\n                top: 0,\r\n                minWidth: \"50px\",\r\n              }}\r\n              onClick={() => {\r\n                props.history.push(\"/search\");\r\n                setStates({\r\n                  area1: \"after\",\r\n                  area2: \"before\",\r\n                  area3: \"before\",\r\n                });\r\n              }}\r\n            >\r\n              <DesktopOutlined \r\n              width={\"60%\"}\r\n              height={\"30%\"}\r\n              className=\"SideLogo\"\r\n              style={{\r\n                position: \"absolute\",\r\n                height: \"35%\",\r\n                width: \"70%\",\r\n                top: \"15%\",\r\n                left: \"15%\",\r\n                minWidth: \"40px\",\r\n              }}\r\n              />\r\n              {/* <img\r\n                id=\"icon1\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"35%\",\r\n                  width: \"70%\",\r\n                  top: \"15%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  minHeight: \"20px\",\r\n                }}\r\n                src={states[\"area1\"] === \"before\" ? icon1 : icon1_1}\r\n                alt=\"\"\r\n              /> */}\r\n              <Text\r\n                id=\"text1_1\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"10%\",\r\n                  width: \"70%\",\r\n                  top: \"55%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  fontFamily: \"Georgia, serif\",\r\n                  fontWeight: \"800\",\r\n                  fontSize: \"18px\",\r\n                  textAlign: \"center\",\r\n                  color: states[\"area1\"] === \"before\" ? \"gray\" : \"white\",\r\n                }}\r\n              >\r\n                查 询\r\n              </Text>\r\n              <Text\r\n                id=\"text1_2\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"10%\",\r\n                  width: \"70%\",\r\n                  top: \"70%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  fontFamily: \"Georgia, serif\",\r\n                  fontWeight: \"800\",\r\n                  fontSize: \"18px\",\r\n                  textAlign: \"center\",\r\n                  color: states[\"area1\"] === \"before\" ? \"gray\" : \"white\",\r\n                }}\r\n              >\r\n                系 统\r\n              </Text>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              style={{\r\n                position: \"absolute\",\r\n                height: \"12.5%\",\r\n                width: \"100%\",\r\n                paddingLeft: 0,\r\n                top: \"17.5%\",\r\n                minWidth: \"50px\",\r\n              }}\r\n              onClick={() => {\r\n                setlogger(false);\r\n                setStates({\r\n                  area1: \"before\",\r\n                  area2: \"after\",\r\n                  area3: \"before\",\r\n                });\r\n              }}\r\n            >\r\n              <UserOutlined\r\n                width={\"60%\"}\r\n                height={\"30%\"}\r\n                className=\"SideLogo\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"35%\",\r\n                  width: \"70%\",\r\n                  top: \"15%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                }}\r\n              />\r\n              {/* <img\r\n                id=\"icon2\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"35%\",\r\n                  width: \"70%\",\r\n                  top: \"15%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                }}\r\n                src={states[\"area2\"] === \"before\" ? icon2 : icon2_2}\r\n                alt=\"\"\r\n              /> */}\r\n              <Text\r\n                id=\"text2_1\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"10%\",\r\n                  width: \"70%\",\r\n                  top: \"55%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  fontFamily: \"Georgia, serif\",\r\n                  fontWeight: \"800\",\r\n                  fontSize: \"18px\",\r\n                  textAlign: \"center\",\r\n                  color: states[\"area2\"] === \"before\" ? \"gray\" : \"white\",\r\n                }}\r\n              >\r\n                个 人\r\n              </Text>\r\n              <Text\r\n                id=\"text2_2\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"10%\",\r\n                  width: \"70%\",\r\n                  top: \"70%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  fontFamily: \"Georgia, serif\",\r\n                  fontWeight: \"800\",\r\n                  fontSize: \"18px\",\r\n                  textAlign: \"center\",\r\n                  color: states[\"area2\"] === \"before\" ? \"gray\" : \"white\",\r\n                }}\r\n              >\r\n                中 心\r\n              </Text>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"3\"\r\n              style={{\r\n                position: \"absolute\",\r\n                height: \"12.5%\",\r\n                width: \"100%\",\r\n                paddingLeft: 0,\r\n                top: \"35%\",\r\n                minWidth: \"50px\",\r\n              }}\r\n              onClick={() => {\r\n                setlogger(true);\r\n                setStates({\r\n                  area1: \"before\",\r\n                  area2: \"before\",\r\n                  area3: \"after\",\r\n                });\r\n              }}\r\n            >\r\n              <FileTextFilled\r\n                width={\"60%\"}\r\n                height={\"30%\"}\r\n                className=\"SideLogo\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"35%\",\r\n                  width: \"70%\",\r\n                  top: \"15%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                }}\r\n              />\r\n              {/* <img\r\n                id=\"icon3\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"35%\",\r\n                  width: \"70%\",\r\n                  top: \"15%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                }}\r\n                src={states[\"area3\"] === \"before\" ? icon3 : icon3_3}\r\n                alt=\"\"\r\n              /> */}\r\n              <Text\r\n                id=\"text3_1\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"10%\",\r\n                  width: \"70%\",\r\n                  top: \"55%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  fontFamily: \"Georgia, serif\",\r\n                  fontWeight: \"800\",\r\n                  fontSize: \"18px\",\r\n                  textAlign: \"center\",\r\n                  color: states[\"area3\"] === \"before\" ? \"gray\" : \"white\",\r\n                }}\r\n              >\r\n                日 志\r\n              </Text>\r\n              <Text\r\n                id=\"text3_2\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"10%\",\r\n                  width: \"70%\",\r\n                  top: \"70%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  fontFamily: \"Georgia, serif\",\r\n                  fontWeight: \"800\",\r\n                  fontSize: \"18px\",\r\n                  textAlign: \"center\",\r\n                  color: states[\"area3\"] === \"before\" ? \"gray\" : \"white\",\r\n                }}\r\n              >\r\n                查 询\r\n              </Text>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Content className=\"content\">\r\n          {logger === true ? (\r\n            <Logger />\r\n          ) : (\r\n            <>\r\n              <QueueAnim type=\"left\" delay={0}>\r\n                <Card className=\"card-table-mission\" key=\"card1\">\r\n                  <Tabs defaultActiveKey=\"1\" className=\"table-mission\">\r\n                    <TabPane\r\n                      tab=\"转出任务\"\r\n                      key=\"1\"\r\n                      style={{ position: \"absolute\", height: \"37vh\" }}\r\n                    >\r\n                      <Table\r\n                        columns={columns}\r\n                        dataSource={data}\r\n                        scroll={{\r\n                          y: \"30vh\",\r\n                        }}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: 0,\r\n                          left: 0,\r\n                          width: \"51.7vw\",\r\n                          height: \"30vh\",\r\n                          minWidth: \"300px\",\r\n                        }}\r\n                        pagination={{\r\n                          defaultPageSize: 6,\r\n                          style: {\r\n                            position: \"absolute\",\r\n                            left: \"18vw\",\r\n                            height: \"1.5vh\",\r\n                            width: \"10vw\",\r\n                            minWidth: \"190px\",\r\n                          },\r\n                          simple: true,\r\n                        }}\r\n                      />\r\n                    </TabPane>\r\n                    <TabPane tab=\"待接任务\" key=\"2\">\r\n                      <Table\r\n                        columns={columns}\r\n                        dataSource={data}\r\n                        scroll={{\r\n                          y: \"35vh\",\r\n                        }}\r\n                        pagination={{\r\n                          defaultPageSize: 6,\r\n                          style: {\r\n                            position: \"absolute\",\r\n                            left: \"18vw\",\r\n                            height: \"1.5vh\",\r\n                            width: \"10vw\",\r\n                            minWidth: \"190px\",\r\n                          },\r\n                          simple: true,\r\n                        }}\r\n                      />\r\n                    </TabPane>\r\n                  </Tabs>\r\n                </Card>\r\n              </QueueAnim>\r\n              <QueueAnim type=\"bottom\" delay={100}>\r\n                <Card className=\"card-table-personal\" key=\"card2\"></Card>\r\n              </QueueAnim>\r\n            </>\r\n          )}\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withRouter(Center);\r\n","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\Router\\router.js",[],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\person-center\\Logger.js",[],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\search\\search.js",["44","45","46","47","48","49","50","51"],"import { useState } from \"react\";\r\nimport \"./search.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Input,\r\n  Card,\r\n  Select,\r\n  DatePicker,\r\n  Tag,\r\n  InputNumber,\r\n  Slider,\r\n} from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Logo from \"./static/logo.png\";\r\nimport moment from \"moment\";\r\nimport { ArrowRightOutlined } from \"@ant-design/icons\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst dateFormat = \"YYYY/MM/DD\";\r\n\r\nconst options = [];\r\nfor (let i = 0; i < 1000; i++) {\r\n  const value = `${i.toString(36)}${i}`;\r\n  options.push({\r\n    value,\r\n    disabled: i === 10,\r\n  });\r\n}\r\n\r\nfunction handleChange(value) {\r\n  console.log(`selected ${value}`);\r\n}\r\n\r\nfunction disabledDate(current) {\r\n  // Can not select days before today and today\r\n  return current && current < moment().add(-1, \"days\").endOf(\"day\");\r\n}\r\n\r\nconst Search = (props) => {\r\n  const [buttonChecked, setbuttonChecked] = useState(1);\r\n  const [city, setCity] = useState([\"北京\", \"上海\", \"深圳\", \"杭州\"]);\r\n  const [hotel, setHotel] = useState([\"北京金茂万丽\", \"上海静安洲际\"]);\r\n  const [trade, setTrade] = useState([\"来福士\", \"故宫\", \"外滩\", \"东方明珠\"]);\r\n  const [group, setGroup] = useState([\"洲际\", \"万豪\", \"凯悦\", \"希尔顿\"]);\r\n\r\n  const [cityChecked, setCityChecked] = useState(\"\");\r\n  const [hotelChecked, setHotelChecked] = useState(\"\");\r\n  const [tradeChecked, setTradeChecked] = useState(\"\");\r\n  const [groupChecked, setGroupChecked] = useState(\"\");\r\n  const [dateChecked, setDateChecked] = useState(\"\");\r\n\r\n  const [budget1, setBudget1] = useState(0);\r\n  const [budget2, setBudget2] = useState(10000);\r\n  const [slider, setSlider] = useState([0, 10000]);\r\n\r\n  const checked = { backgroundColor: \"black\", color: \"white\" };\r\n  const unChecked = { backgroundColor: \"white\", color: \"black\" };\r\n\r\n  const tagRender = (props) => {\r\n    const { label, value } = props;\r\n    const onClose = (e) => {\r\n      switch (label) {\r\n        case cityChecked:\r\n          setCityChecked(\"\");\r\n          break;\r\n        case hotelChecked:\r\n          setHotelChecked(\"\");\r\n          break;\r\n        case tradeChecked:\r\n          setTradeChecked(\"\");\r\n          break;\r\n        case groupChecked:\r\n          setGroupChecked(\"\");\r\n          break;\r\n        case dateChecked:\r\n          setDateChecked(\"\");\r\n          break;\r\n        default:\r\n          setBudget1(0)\r\n          setBudget2(10000)\r\n          break;\r\n      }\r\n    };\r\n    switch (label) {\r\n      case \"\":\r\n        return null;\r\n      case \"0元 到 10000元 \":\r\n        return null;\r\n      default:\r\n        console.log(label);\r\n        return (\r\n          <Tag\r\n            color={value}\r\n            closable={true}\r\n            onClose={onClose}\r\n            style={{\r\n              color: \"white\",\r\n              fontSize: \"15px\",\r\n              backgroundColor: \"black\",\r\n            }}\r\n          >\r\n            {label}\r\n          </Tag>\r\n        );\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className=\"background\"\r\n      style={{ minWidth: \"900px\", minHeight: \"800px\" }}\r\n    >\r\n      <img src={Logo} alt=\"\" className=\"logo\" />\r\n      {/* 快捷搜索/代码搜索 */}\r\n      <div className=\"searchArea\">\r\n        <Input className=\"input\" />\r\n        <Button className=\"button\">搜索</Button>\r\n      </div>\r\n      {/* <Row gutter={16} className=\"buttonArea\">\r\n        <Col span={10}>\r\n          <Button\r\n            className=\"simple\"\r\n            style={buttonChecked === 1 ? checked : unChecked}\r\n            onClick={() => {\r\n              setbuttonChecked(1);\r\n            }}\r\n          >\r\n            基础\r\n          </Button>\r\n        </Col>\r\n        <Col span={4}>&nbsp;</Col>\r\n        <Col span={10}>\r\n          <Button\r\n            className=\"advance\"\r\n            style={buttonChecked === 2 ? checked : unChecked}\r\n            onClick={() => {\r\n              setbuttonChecked(2);\r\n            }}\r\n          >\r\n            高级\r\n          </Button>\r\n        </Col>\r\n      </Row> */}\r\n      <Card className=\"card\">\r\n        <div className=\"chosen-area\">\r\n          <label\r\n            className=\"chosen-label\"\r\n            style={{ fontWeight: \"900\", fontSize: \"18px\" }}\r\n            key=\"chosen-label\"\r\n          >\r\n            已选条件：\r\n          </label>\r\n          <Select\r\n            tagRender={tagRender}\r\n            mode=\"multiple\"\r\n            className=\"chosen-fields\"\r\n            placeholder=\"Please select\"\r\n            value={[\r\n              cityChecked,\r\n              hotelChecked,\r\n              tradeChecked,\r\n              groupChecked,\r\n              `${budget1}元 到 ${budget2}元 `,\r\n              dateChecked,\r\n              \r\n            ]}\r\n            onChange={handleChange}\r\n            bordered={false}\r\n            open={false}\r\n            disabled\r\n            key=\"select\"\r\n          />\r\n        </div>\r\n        <div className=\"form\">\r\n          <div\r\n            className=\"inputArea\"\r\n            style={{ top: \"0\", left: 0 }}\r\n            key=\"cityArea\"\r\n          >\r\n            <Row className=\"row\" style={{ top: 0, left: 0 }} key=\"city-row\">\r\n              <Col\r\n                span={4}\r\n                style={{ display: \"flex\", alignSelf: \"center\" }}\r\n                key=\"city-label-col\"\r\n              >\r\n                <label\r\n                  key=\"city-label\"\r\n                  style={{\r\n                    height: \"100%\",\r\n                    fontWeight: \"900\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  城市：\r\n                </label>\r\n              </Col>\r\n              {city.map((item, index) => {\r\n                return (\r\n                  <Col\r\n                    span={5}\r\n                    key={\"city-col-\" + index.toString()}\r\n                    style={{ display: \"flex\", alignSelf: \"center\" }}\r\n                  >\r\n                    <Button\r\n                      key={\"city-button-\" + index.toString()}\r\n                      type=\"text\"\r\n                      onClick={() => {\r\n                        setCityChecked(item);\r\n                      }}\r\n                    >\r\n                      {item}\r\n                    </Button>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n            <Input className=\"form-input\" key=\"city\" />\r\n          </div>\r\n          <div\r\n            className=\"inputArea\"\r\n            style={{ top: \"16%\", left: 0 }}\r\n            key=\"hotelArea\"\r\n          >\r\n            <Row className=\"row\" gutter={[16]} key=\"hotel-row\">\r\n              <Col\r\n                span={4}\r\n                style={{ display: \"flex\", alignSelf: \"center\" }}\r\n                key=\"hotel-label-col\"\r\n              >\r\n                <label\r\n                  key=\"hotel-label\"\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    fontWeight: \"900\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  酒店：\r\n                </label>\r\n              </Col>\r\n              {hotel.map((item, index) => {\r\n                return (\r\n                  <Col\r\n                    span={10}\r\n                    key={\"hotel-col-\" + index.toString()}\r\n                    style={{ display: \"flex\", alignSelf: \"center\" }}\r\n                  >\r\n                    <Button\r\n                      key={\"hotel-button-\" + index.toString()}\r\n                      type=\"text\"\r\n                      onClick={() => {\r\n                        setHotelChecked(item);\r\n                      }}\r\n                    >\r\n                      {item}\r\n                    </Button>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n            <Input className=\"form-input\" key=\"hotel\" />\r\n          </div>\r\n          <div\r\n            className=\"inputArea\"\r\n            style={{ top: \"32%\", left: 0 }}\r\n            key=\"tradeArea\"\r\n          >\r\n            <Row className=\"row\" key=\"trade-row\">\r\n              <Col span={4} style={{ display: \"flex\" }} key=\"trade-label-col\">\r\n                <label\r\n                  key=\"trade-label\"\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    fontWeight: \"900\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  商圈：\r\n                </label>\r\n              </Col>\r\n              {trade.map((item, index) => {\r\n                return (\r\n                  <Col\r\n                    span={5}\r\n                    key={\"trade-col-\" + index.toString()}\r\n                    style={{ display: \"flex\", alignSelf: \"center\" }}\r\n                  >\r\n                    <Button\r\n                      key={\"trade-button-\" + index.toString()}\r\n                      type=\"text\"\r\n                      onClick={() => {\r\n                        setTradeChecked(item);\r\n                      }}\r\n                    >\r\n                      {item}\r\n                    </Button>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n            <Input className=\"form-input\" key=\"trade\" />\r\n          </div>\r\n          <div\r\n            className=\"inputArea\"\r\n            style={{ top: \"48%\", left: 0 }}\r\n            key=\"groupArea\"\r\n          >\r\n            <Row className=\"row\" key=\"group-row\">\r\n              <Col span={4} style={{ display: \"flex\" }} key=\"group-label-col\">\r\n                <label\r\n                  key=\"group-label\"\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    fontWeight: \"900\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  集团：\r\n                </label>\r\n              </Col>\r\n              {group.map((item, index) => {\r\n                return (\r\n                  <Col\r\n                    span={5}\r\n                    key={\"group-col-\" + index.toString()}\r\n                    style={{ display: \"flex\", alignSelf: \"center\" }}\r\n                  >\r\n                    <Button\r\n                      key={\"group-button-\" + index.toString()}\r\n                      type=\"text\"\r\n                      onClick={() => {\r\n                        setGroupChecked(item);\r\n                      }}\r\n                    >\r\n                      {item}\r\n                    </Button>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n            <Input className=\"form-input\" key=\"group\" />\r\n          </div>\r\n          <div\r\n            className=\"inputArea\"\r\n            style={{ top: \"64%\", left: 0 }}\r\n            key=\"groupArea\"\r\n          >\r\n            <Row className=\"row\" key=\"group-row\">\r\n              <Col span={4} style={{ display: \"flex\" }} key=\"group-label-col\">\r\n                <label\r\n                  key=\"group-label\"\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    fontWeight: \"900\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  预算：\r\n                </label>\r\n              </Col>\r\n              <Col span={20} style={{ display: \"flex\" }}>\r\n                <Slider\r\n                  range\r\n                  defaultValue={[0, 10000]}\r\n                  step={50}\r\n                  min={0}\r\n                  max={10000}\r\n                  value={slider}\r\n                  onChange={(value) => {\r\n                    setBudget1(value[0]);\r\n                    setBudget2(value[1]);\r\n                    setSlider(value);\r\n                  }}\r\n                  style={{ alignSelf: \"center\", width: \"100%\" }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <div className=\"form-input\">\r\n              <InputNumber\r\n                style={{ height: \"45%\", width: \"42.5%\", alignSelf: \"center\" }}\r\n                key=\"budget1\"\r\n                value={budget1}\r\n                step={50}\r\n                onChange={(value) => {\r\n                  setBudget1(value);\r\n                  setSlider([budget1, budget2]);\r\n                }}\r\n              />\r\n              <ArrowRightOutlined\r\n                style={{\r\n                  alignSelf: \"center\",\r\n                  margin: \"20px auto\",\r\n                  width: \"15%\",\r\n                }}\r\n              />\r\n              <InputNumber\r\n                key=\"budget2\"\r\n                style={{ height: \"45%\", width: \"42.5%\", alignSelf: \"center\" }}\r\n                step={50}\r\n                value={budget2}\r\n                onChange={(value) => {\r\n                  setBudget2(value);\r\n                  setSlider([budget1, budget2]);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"inputArea\"\r\n            style={{ top: \"80%\", left: 0 }}\r\n            key=\"dateArea\"\r\n          >\r\n            <Row className=\"row\" key=\"date-row\">\r\n              <Col span={4} style={{ display: \"flex\" }} key=\"date-label-col\">\r\n                <label\r\n                  key=\"date-label\"\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    fontWeight: \"900\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  日期：\r\n                </label>\r\n              </Col>\r\n              <Col span={20} style={{ display: \"flex\" }} key=\"date-col\">\r\n                <RangePicker\r\n                  key=\"1\"\r\n                  style={{ alignSelf: \"center\" }}\r\n                  disabledDate={disabledDate}\r\n                  defaultValue={[\r\n                    moment(moment(), dateFormat),\r\n                    moment(moment().add(1, \"days\"), dateFormat),\r\n                  ]}\r\n                  bordered={false}\r\n                  format={dateFormat}\r\n                  onCalendarChange={(dates, dateString, info) => {\r\n                    switch (dateString[1]) {\r\n                      case dateString[0]:\r\n                        setDateChecked(\r\n                          `${dateString[0]} 入住 ${dates[1]\r\n                            .add(1, \"days\")\r\n                            .format(dateFormat)} 离开`\r\n                        );\r\n                        break;\r\n                      case \"\":\r\n                        setDateChecked(\r\n                          `${dateString[0]} 入住 ${dates[0]\r\n                            .add(1, \"days\")\r\n                            .format(dateFormat)} 离开`\r\n                        );\r\n                        break;\r\n                      default:\r\n                        setDateChecked(\r\n                          `${dateString[0]} 入住 ${dateString[1]} 离开`\r\n                        );\r\n                        break;\r\n                    }\r\n                  }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Button\r\n              className=\"form-submit\"\r\n              key=\"date\"\r\n              onClick={() => {\r\n                props.history.push(\"/result\");\r\n              }}\r\n            >\r\n              搜索\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Search);\r\n","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\result\\result.js",["52","53","54","55","56","57","58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":18,"column":8,"nodeType":"66","messageId":"67","endLine":18,"endColumn":13},{"ruleId":"64","severity":1,"message":"68","line":19,"column":8,"nodeType":"66","messageId":"67","endLine":19,"endColumn":13},{"ruleId":"64","severity":1,"message":"69","line":20,"column":8,"nodeType":"66","messageId":"67","endLine":20,"endColumn":15},{"ruleId":"64","severity":1,"message":"70","line":21,"column":8,"nodeType":"66","messageId":"67","endLine":21,"endColumn":15},{"ruleId":"64","severity":1,"message":"71","line":22,"column":8,"nodeType":"66","messageId":"67","endLine":22,"endColumn":15},{"ruleId":"64","severity":1,"message":"72","line":42,"column":10,"nodeType":"66","messageId":"67","endLine":42,"endColumn":23},{"ruleId":"64","severity":1,"message":"73","line":42,"column":25,"nodeType":"66","messageId":"67","endLine":42,"endColumn":41},{"ruleId":"64","severity":1,"message":"74","line":43,"column":16,"nodeType":"66","messageId":"67","endLine":43,"endColumn":23},{"ruleId":"64","severity":1,"message":"75","line":44,"column":17,"nodeType":"66","messageId":"67","endLine":44,"endColumn":25},{"ruleId":"64","severity":1,"message":"76","line":45,"column":17,"nodeType":"66","messageId":"67","endLine":45,"endColumn":25},{"ruleId":"64","severity":1,"message":"77","line":46,"column":17,"nodeType":"66","messageId":"67","endLine":46,"endColumn":25},{"ruleId":"64","severity":1,"message":"78","line":58,"column":9,"nodeType":"66","messageId":"67","endLine":58,"endColumn":16},{"ruleId":"64","severity":1,"message":"79","line":59,"column":9,"nodeType":"66","messageId":"67","endLine":59,"endColumn":18},{"ruleId":"64","severity":1,"message":"80","line":12,"column":3,"nodeType":"66","messageId":"67","endLine":12,"endColumn":9},{"ruleId":"64","severity":1,"message":"81","line":20,"column":3,"nodeType":"66","messageId":"67","endLine":20,"endColumn":14},{"ruleId":"64","severity":1,"message":"82","line":21,"column":3,"nodeType":"66","messageId":"67","endLine":21,"endColumn":8},{"ruleId":"64","severity":1,"message":"83","line":28,"column":8,"nodeType":"66","messageId":"67","endLine":28,"endColumn":16},{"ruleId":"64","severity":1,"message":"84","line":28,"column":20,"nodeType":"66","messageId":"67","endLine":28,"endColumn":30},{"ruleId":"64","severity":1,"message":"85","line":28,"column":32,"nodeType":"66","messageId":"67","endLine":28,"endColumn":45},{"ruleId":"86","severity":1,"message":"87","line":47,"column":23,"nodeType":"88","endLine":47,"endColumn":26},{"ruleId":"64","severity":1,"message":"89","line":309,"column":10,"nodeType":"66","messageId":"67","endLine":309,"endColumn":21},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'icon2' is defined but never used.","Identifier","unusedVar","'icon3' is defined but never used.","'icon1_1' is defined but never used.","'icon2_2' is defined but never used.","'icon3_3' is defined but never used.","'buttonChecked' is assigned a value but never used.","'setbuttonChecked' is assigned a value but never used.","'setCity' is assigned a value but never used.","'setHotel' is assigned a value but never used.","'setTrade' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'checked' is assigned a value but never used.","'unChecked' is assigned a value but never used.","'Select' is defined but never used.","'InputNumber' is defined but never used.","'Badge' is defined but never used.","'ProTable' is defined but never used.","'ProColumns' is defined but never used.","'TableDropdown' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'dateChecked' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]