[{"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\index.js":"1","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\reportWebVitals.js":"2","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\login\\App.js":"3","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\person-center\\Center.js":"4","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\Router\\router.js":"5","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\person-center\\Logger.js":"6","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\search\\search.js":"7","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\result\\result.js":"8","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\dataCenter\\loginMessage.js":"9"},{"size":472,"mtime":1607066663746,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":5564,"mtime":1608204608021,"results":"13","hashOfConfig":"11"},{"size":15330,"mtime":1608277923564,"results":"14","hashOfConfig":"11"},{"size":638,"mtime":1608193637111,"results":"15","hashOfConfig":"11"},{"size":3207,"mtime":1607405016753,"results":"16","hashOfConfig":"11"},{"size":17338,"mtime":1608292497494,"results":"17","hashOfConfig":"11"},{"size":17475,"mtime":1608300228915,"results":"18","hashOfConfig":"11"},{"size":256,"mtime":1608204457803,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"10rx9p0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\index.js",[],["42","43"],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\reportWebVitals.js",[],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\login\\App.js",["44","45"],"import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Row, Col, Card, Form, Input, Button, Typography, message } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport LogoUrl from \"./static/logo.png\";\nimport UserLogo from \"./static/icon1.png\";\nimport PassLogo from \"./static/icon2.png\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport useLoginState from \"../dataCenter/loginMessage\";\n\n// axios 基本配置， 配置csrf验证\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"LoginToken\";\naxios.defaults.baseURL = \"http://127.0.0.1:8000\";\naxios.defaults.withCredentials = true;\nconst { Title } = Typography;\n\nfunction App(props) {\n  // eslint-disable-next-line\n  const [formMessage, setformMessage] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const { username, setUsername } = useLoginState();\n\n  const onFinish = (values) => {\n    axios\n      .get(\"/UNE/\")\n      .then((response) => {\n        axios\n          .post(\"/login/\", formMessage, {\n            \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n          })\n          .then((response) => {\n            switch (response.data.status) {\n              case \"success\":\n                message.success(\"欢迎您，\" + response.data.username);\n                setUsername(response.data.username);\n                props.history.push(\"/center\");\n                break;\n              default:\n                message.error(response.data.message);\n                break;\n            }\n          });\n      })\n      .catch((response) => {\n        console.log(\"网络错误！\");\n      });\n  };\n\n  const onFinishFaild = (values, errorFields, outOfDate) => {\n    console.log(values);\n  };\n\n  return (\n    <div className=\"test\">\n      <Row gutter={[16, { xs: 14, sm: 20, md: 30, lg: 36 }]}>\n        <Col span=\"24\">&nbsp;</Col>\n        <Col span=\"24\">&nbsp;</Col>\n        <Col span=\"24\">&nbsp;</Col>\n        <Col span=\"8\">&nbsp;</Col>\n        <Col span=\"8\" style={{ alignItems: \"center\" }}>\n          <img src={LogoUrl} alt=\"\" />\n        </Col>\n        <Col span=\"8\">&nbsp;</Col>\n        <Col xs={2} sm={5} md={7} lg={8} xl={8} xxl={9}>\n          &nbsp;\n        </Col>\n        <Col\n          xs={20}\n          sm={14}\n          md={10}\n          lg={8}\n          xl={8}\n          xxl={6}\n          style={{ alignItems: \"center\" }}\n        >\n          <Card\n            className=\"inline-center\"\n            style={{ alignSelf: \"center\", borderRadius: \"15px\" }}\n          >\n            <Form\n              name=\"normal_login\"\n              className=\"login-form\"\n              initialValues={{ layout: \"horizontal\" }}\n              onFinish={onFinish}\n              onValuesChange={(changedValues, allValues) => {\n                setformMessage(allValues);\n              }}\n              onFinishFailed={onFinishFaild}\n            >\n              <Row gutter={[4, 18]}>\n                <Col span=\"24\">&nbsp;</Col>\n                <Col span=\"24\">\n                  <Form.Item>\n                    <Title strong=\"true\">登 录</Title>\n                  </Form.Item>\n                </Col>\n                <Col span=\"1\">&nbsp;</Col>\n                <Col span=\"22\">\n                  <Form.Item\n                    name=\"username\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"请输入用户名!\",\n                      },\n                    ]}\n                  >\n                    <Input\n                      autoComplete=\"off\"\n                      className=\"login-input\"\n                      prefix={<img src={UserLogo} alt=\"\" />}\n                      placeholder=\"用 户 名\"\n                      style={{ borderTop: 0, borderRight: 0, borderLeft: 0 }}\n                    />\n                  </Form.Item>\n                </Col>\n                <Col span=\"1\">&nbsp;</Col>\n\n                <Col span=\"1\">&nbsp;</Col>\n                <Col span=\"22\">\n                  <Form.Item\n                    name=\"password\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"请输入密码!\",\n                      },\n                    ]}\n                  >\n                    <Input\n                      autoComplete=\"off\"\n                      className=\"login-input\"\n                      prefix={<img src={PassLogo} alt=\"\" />}\n                      type=\"password\"\n                      placeholder=\"密 码\"\n                      style={{ borderTop: 0, borderRight: 0, borderLeft: 0 }}\n                    />\n                  </Form.Item>\n                </Col>\n                <Col span=\"1\">&nbsp;</Col>\n                <Col span=\"2\">&nbsp;</Col>\n                <Col span=\"20\">\n                  <Form.Item>\n                    <Button\n                      size=\"large\"\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      style={{\n                        width: \"100%\",\n                        borderRadius: 10,\n                        backgroundColor: \"black\",\n                      }}\n                    >\n                      登录\n                    </Button>\n                  </Form.Item>\n                </Col>\n                <Col span=\"2\">&nbsp;</Col>\n              </Row>\n            </Form>\n          </Card>\n        </Col>\n        <Col xs={2} sm={5} md={7} lg={8} xl={8} xxl={9}>\n          &nbsp;\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\person-center\\Center.js",["46","47","48","49","50","51","52"],"import { useState, useEffect } from \"react\";\r\nimport \"./Center.css\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  Table,\r\n  Layout,\r\n  Typography,\r\n  Menu,\r\n  Dropdown,\r\n  Tabs,\r\n  Card,\r\n  Pagination,\r\n  message,\r\n} from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport Logo from \"./static/logo.png\";\r\nimport icon1 from \"./static/icon1.png\";\r\nimport icon2 from \"./static/icon2.png\";\r\nimport icon3 from \"./static/icon3.png\";\r\nimport icon1_1 from \"./static/icon1-1.png\";\r\nimport icon2_2 from \"./static/icon2-2.png\";\r\nimport icon3_3 from \"./static/icon3-3.png\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport QueueAnim from \"rc-queue-anim\";\r\nimport Logger from \"./Logger\";\r\nimport {\r\n  UserOutlined,\r\n  FileTextFilled,\r\n  DesktopOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport useLoginState from \"../dataCenter/loginMessage\";\r\n\r\n// axios 基本配置， 配置csrf验证\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\naxios.defaults.xsrfCookieName = \"LoginToken\";\r\naxios.defaults.baseURL = \"http://127.0.0.1:8000\";\r\naxios.defaults.withCredentials = true;\r\n\r\nconst { Text } = Typography;\r\nconst { Header, Sider, Content } = Layout;\r\nconst { TabPane } = Tabs;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Full Name\",\r\n    textWrap: \"word-break\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n  },\r\n  {\r\n    title: \"Age\",\r\n    textWrap: \"word-break\",\r\n    dataIndex: \"age\",\r\n    key: \"age\",\r\n  },\r\n  {\r\n    title: \"Column 1\",\r\n    dataIndex: \"address\",\r\n    key: \"1\",\r\n    textWrap: \"word-break\",\r\n  },\r\n  {\r\n    title: \"Column 2\",\r\n    dataIndex: \"address\",\r\n    key: \"2\",\r\n    textWrap: \"word-break\",\r\n  },\r\n\r\n  {\r\n    title: \"Action\",\r\n    key: \"operation\",\r\n    textWrap: \"word-break\",\r\n    // eslint-disable-next-line\r\n    render: () => <a>action</a>,\r\n  },\r\n];\r\n\r\nconst columns1 = [\r\n  {\r\n    title: \"qwewqr\",\r\n    textWrap: \"word-break\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n  },\r\n  {\r\n    title: \"Age\",\r\n    textWrap: \"word-break\",\r\n    dataIndex: \"age\",\r\n    key: \"age\",\r\n  },\r\n  {\r\n    title: \"Column 1\",\r\n    dataIndex: \"address\",\r\n    key: \"1\",\r\n    textWrap: \"word-break\",\r\n  },\r\n  {\r\n    title: \"Column 2\",\r\n    dataIndex: \"address\",\r\n    key: \"2\",\r\n    textWrap: \"word-break\",\r\n  },\r\n\r\n  {\r\n    title: \"Action\",\r\n    key: \"operation\",\r\n    textWrap: \"word-break\",\r\n    // eslint-disable-next-line\r\n    render: () => <a>action</a>,\r\n  },\r\n];\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 6; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `Edrward ${i}`,\r\n    age: 32,\r\n    address: `London Park no. ${i}`,\r\n  });\r\n}\r\n\r\nconst tabList = [\r\n  {\r\n    key: \"outMission\",\r\n    tab: \"转出任务\",\r\n  },\r\n  {\r\n    key: \"inMission\",\r\n    tab: \"待接任务\",\r\n  },\r\n];\r\n\r\nconst contentList = {\r\n  inMission: (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={data}\r\n      scroll={true}\r\n      pagination={false}\r\n    />\r\n  ),\r\n  outMission: (\r\n    <Table\r\n      columns={columns1}\r\n      dataSource={data}\r\n      scroll={true}\r\n      pagination={false}\r\n    />\r\n  ),\r\n};\r\n\r\nconst Center = (props) => {\r\n  const menu = (\r\n    <Menu className=\"dropdown\">\r\n      <Menu.Item\r\n        onClick={{}}\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"100px\",\r\n          height: \"60px\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"20px\",\r\n            height: \"40px\",\r\n            bottom: 0,\r\n            right: 0,\r\n            left: 0,\r\n          }}\r\n        >\r\n          上传头像\r\n        </Text>\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        onClick={{}}\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"100px\",\r\n          height: \"60px\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"20px\",\r\n            height: \"40px\",\r\n            bottom: 0,\r\n            right: 0,\r\n            left: 0,\r\n          }}\r\n        >\r\n          修改密码\r\n        </Text>\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        onClick={() => {\r\n          axios.get(\"/logout/\").then((response) => {\r\n            message.success(\"注销成功， 请重新登录\");\r\n            props.history.push(\"/\");\r\n          });\r\n        }}\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"100px\",\r\n          height: \"60px\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"20px\",\r\n            height: \"40px\",\r\n            bottom: 0,\r\n            right: 0,\r\n            left: 0,\r\n          }}\r\n        >\r\n          退出登录\r\n        </Text>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  // 通过hox全局管理变量\r\n  const { username, setUsername } = useLoginState();\r\n\r\n  // 定义hook\r\n  const [TabKey, setTabKey] = useState(\"outMission\");\r\n  const [logger, setlogger] = useState(false);\r\n  const [states, setStates] = useState({\r\n    area1: \"before\",\r\n    area2: \"after\",\r\n    area3: \"before\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (username === \"\") {\r\n      axios\r\n        .get(\"/user/\")\r\n        .then((response) => {\r\n          setUsername(response.data);\r\n        })\r\n        .catch((error) => {\r\n          props.history.push(\"/\");\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Layout className=\"main\">\r\n      <Header\r\n        className=\"header\"\r\n        style={{ minHeight: \"60px\", minWidth: \"100%\" }}\r\n      >\r\n        <img src={Logo} alt=\"\" className=\"img\" />\r\n        <Row className=\"avatar\" gutter={16}>\r\n          <Col xs={12} sm={10} md={10} lg={8} xl={7} xxl={6}>\r\n            <Avatar\r\n              src={<img src={icon1} alt=\"\" />}\r\n              size={{ xs: 30, sm: 30, md: 35, lg: 35, xl: 40, xxl: 50 }}\r\n            />\r\n          </Col>\r\n          <Col xs={12} sm={14} md={14} lg={16} xl={17} xxl={18}>\r\n            <Dropdown overlay={menu} placement=\"bottomCenter\" arrow>\r\n              <Text className=\"workerNumber\">{username}</Text>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n      <Layout className=\"body\">\r\n        <Sider className=\"side\" width=\"70px\">\r\n          <Menu className=\"menu\" theme=\"dark\" defaultSelectedKeys=\"2\">\r\n            <Menu.Item\r\n              key=\"1\"\r\n              style={{\r\n                position: \"absolute\",\r\n                height: \"12.5%\",\r\n                width: \"100%\",\r\n                paddingLeft: 0,\r\n                paddingTop: 0,\r\n                top: 0,\r\n                minWidth: \"50px\",\r\n              }}\r\n              onClick={() => {\r\n                \r\n                props.history.push(\"/search\");\r\n                setStates({\r\n                  area1: \"after\",\r\n                  area2: \"before\",\r\n                  area3: \"before\",\r\n                });\r\n              }}\r\n            >\r\n              <DesktopOutlined\r\n                width={\"60%\"}\r\n                height={\"30%\"}\r\n                className=\"SideLogo\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"35%\",\r\n                  width: \"70%\",\r\n                  top: \"15%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                }}\r\n              />\r\n              {/* <img\r\n                id=\"icon1\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"35%\",\r\n                  width: \"70%\",\r\n                  top: \"15%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  minHeight: \"20px\",\r\n                }}\r\n                src={states[\"area1\"] === \"before\" ? icon1 : icon1_1}\r\n                alt=\"\"\r\n              /> */}\r\n              <Text\r\n                id=\"text1_1\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"10%\",\r\n                  width: \"70%\",\r\n                  top: \"55%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  fontFamily: \"Georgia, serif\",\r\n                  fontWeight: \"800\",\r\n                  fontSize: \"18px\",\r\n                  textAlign: \"center\",\r\n                  color: states[\"area1\"] === \"before\" ? \"gray\" : \"white\",\r\n                }}\r\n              >\r\n                查 询\r\n              </Text>\r\n              <Text\r\n                id=\"text1_2\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"10%\",\r\n                  width: \"70%\",\r\n                  top: \"70%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  fontFamily: \"Georgia, serif\",\r\n                  fontWeight: \"800\",\r\n                  fontSize: \"18px\",\r\n                  textAlign: \"center\",\r\n                  color: states[\"area1\"] === \"before\" ? \"gray\" : \"white\",\r\n                }}\r\n              >\r\n                系 统\r\n              </Text>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              style={{\r\n                position: \"absolute\",\r\n                height: \"12.5%\",\r\n                width: \"100%\",\r\n                paddingLeft: 0,\r\n                top: \"17.5%\",\r\n                minWidth: \"50px\",\r\n              }}\r\n              onClick={() => {\r\n                setlogger(false);\r\n                setStates({\r\n                  area1: \"before\",\r\n                  area2: \"after\",\r\n                  area3: \"before\",\r\n                });\r\n              }}\r\n            >\r\n              <UserOutlined\r\n                width={\"60%\"}\r\n                height={\"30%\"}\r\n                className=\"SideLogo\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"35%\",\r\n                  width: \"70%\",\r\n                  top: \"15%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                }}\r\n              />\r\n              {/* <img\r\n                id=\"icon2\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"35%\",\r\n                  width: \"70%\",\r\n                  top: \"15%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                }}\r\n                src={states[\"area2\"] === \"before\" ? icon2 : icon2_2}\r\n                alt=\"\"\r\n              /> */}\r\n              <Text\r\n                id=\"text2_1\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"10%\",\r\n                  width: \"70%\",\r\n                  top: \"55%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  fontFamily: \"Georgia, serif\",\r\n                  fontWeight: \"800\",\r\n                  fontSize: \"18px\",\r\n                  textAlign: \"center\",\r\n                  color: states[\"area2\"] === \"before\" ? \"gray\" : \"white\",\r\n                }}\r\n              >\r\n                个 人\r\n              </Text>\r\n              <Text\r\n                id=\"text2_2\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"10%\",\r\n                  width: \"70%\",\r\n                  top: \"70%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  fontFamily: \"Georgia, serif\",\r\n                  fontWeight: \"800\",\r\n                  fontSize: \"18px\",\r\n                  textAlign: \"center\",\r\n                  color: states[\"area2\"] === \"before\" ? \"gray\" : \"white\",\r\n                }}\r\n              >\r\n                中 心\r\n              </Text>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"3\"\r\n              style={{\r\n                position: \"absolute\",\r\n                height: \"12.5%\",\r\n                width: \"100%\",\r\n                paddingLeft: 0,\r\n                top: \"35%\",\r\n                minWidth: \"50px\",\r\n              }}\r\n              onClick={() => {\r\n                setlogger(true);\r\n                setStates({\r\n                  area1: \"before\",\r\n                  area2: \"before\",\r\n                  area3: \"after\",\r\n                });\r\n              }}\r\n            >\r\n              <FileTextFilled\r\n                width={\"60%\"}\r\n                height={\"30%\"}\r\n                className=\"SideLogo\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"35%\",\r\n                  width: \"70%\",\r\n                  top: \"15%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                }}\r\n              />\r\n              {/* <img\r\n                id=\"icon3\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"35%\",\r\n                  width: \"70%\",\r\n                  top: \"15%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                }}\r\n                src={states[\"area3\"] === \"before\" ? icon3 : icon3_3}\r\n                alt=\"\"\r\n              /> */}\r\n              <Text\r\n                id=\"text3_1\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"10%\",\r\n                  width: \"70%\",\r\n                  top: \"55%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  fontFamily: \"Georgia, serif\",\r\n                  fontWeight: \"800\",\r\n                  fontSize: \"18px\",\r\n                  textAlign: \"center\",\r\n                  color: states[\"area3\"] === \"before\" ? \"gray\" : \"white\",\r\n                }}\r\n              >\r\n                日 志\r\n              </Text>\r\n              <Text\r\n                id=\"text3_2\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  height: \"10%\",\r\n                  width: \"70%\",\r\n                  top: \"70%\",\r\n                  left: \"15%\",\r\n                  minWidth: \"40px\",\r\n                  fontFamily: \"Georgia, serif\",\r\n                  fontWeight: \"800\",\r\n                  fontSize: \"18px\",\r\n                  textAlign: \"center\",\r\n                  color: states[\"area3\"] === \"before\" ? \"gray\" : \"white\",\r\n                }}\r\n              >\r\n                查 询\r\n              </Text>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Content className=\"content\">\r\n          {logger === true ? (\r\n            <Logger />\r\n          ) : (\r\n            <>\r\n              <QueueAnim type=\"left\" delay={0}>\r\n                <Card\r\n                  className=\"card-table-mission\"\r\n                  tabBarExtraContent={\r\n                    <Pagination pageSizeOptions={[6]} total={18} />\r\n                  }\r\n                  key=\"card1\"\r\n                  tabList={tabList}\r\n                  activeTabKey={TabKey}\r\n                  onTabChange={(key) => {\r\n                    console.log(contentList[TabKey]);\r\n                    setTabKey(key);\r\n                    console.log(contentList[TabKey]);\r\n                  }}\r\n                >\r\n                  {contentList[TabKey]}\r\n                </Card>\r\n              </QueueAnim>\r\n              <QueueAnim type=\"bottom\" delay={100}>\r\n                <Card className=\"card-table-personal\" key=\"card2\"></Card>\r\n              </QueueAnim>\r\n            </>\r\n          )}\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withRouter(Center);\r\n","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\Router\\router.js",["53"],"import React from 'react';\r\nimport {HashRouter, Route, Switch, Redirect} from 'react-router-dom';\r\nimport Login from '../login/App';\r\nimport Center from '../person-center/Center';\r\nimport Search from '../search/search'\r\nimport Result from '../result/result'\r\n\r\nconst BasicRoute = () => (\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Login}/>\r\n            <Route exact path=\"/center\" component={Center}/>\r\n            <Route exact path=\"/search\" component={Search}/>\r\n            <Route exact path=\"/result\" component={Result}/>\r\n        </Switch>\r\n    </HashRouter>\r\n);\r\n\r\n\r\nexport default BasicRoute;","C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\person-center\\Logger.js",[],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\search\\search.js",["54","55","56","57","58","59","60","61","62"],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\result\\result.js",["63","64","65","66","67","68","69","70"],"C:\\Users\\UNE\\Desktop\\code\\front-end\\pc\\src\\dataCenter\\loginMessage.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":20,"nodeType":"77","messageId":"78","endLine":1,"endColumn":29},{"ruleId":"75","severity":1,"message":"79","line":26,"column":11,"nodeType":"77","messageId":"78","endLine":26,"endColumn":19},{"ruleId":"75","severity":1,"message":"80","line":21,"column":8,"nodeType":"77","messageId":"78","endLine":21,"endColumn":13},{"ruleId":"75","severity":1,"message":"81","line":22,"column":8,"nodeType":"77","messageId":"78","endLine":22,"endColumn":13},{"ruleId":"75","severity":1,"message":"82","line":23,"column":8,"nodeType":"77","messageId":"78","endLine":23,"endColumn":15},{"ruleId":"75","severity":1,"message":"83","line":24,"column":8,"nodeType":"77","messageId":"78","endLine":24,"endColumn":15},{"ruleId":"75","severity":1,"message":"84","line":25,"column":8,"nodeType":"77","messageId":"78","endLine":25,"endColumn":15},{"ruleId":"75","severity":1,"message":"85","line":45,"column":9,"nodeType":"77","messageId":"78","endLine":45,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":257,"column":6,"nodeType":"88","endLine":257,"endColumn":8,"suggestions":"89"},{"ruleId":"75","severity":1,"message":"90","line":2,"column":36,"nodeType":"77","messageId":"78","endLine":2,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":66,"column":6,"nodeType":"88","endLine":66,"endColumn":8,"suggestions":"91"},{"ruleId":"75","severity":1,"message":"92","line":67,"column":10,"nodeType":"77","messageId":"78","endLine":67,"endColumn":23},{"ruleId":"75","severity":1,"message":"93","line":67,"column":25,"nodeType":"77","messageId":"78","endLine":67,"endColumn":41},{"ruleId":"75","severity":1,"message":"94","line":68,"column":16,"nodeType":"77","messageId":"78","endLine":68,"endColumn":23},{"ruleId":"75","severity":1,"message":"95","line":69,"column":17,"nodeType":"77","messageId":"78","endLine":69,"endColumn":25},{"ruleId":"75","severity":1,"message":"96","line":70,"column":17,"nodeType":"77","messageId":"78","endLine":70,"endColumn":25},{"ruleId":"75","severity":1,"message":"97","line":71,"column":17,"nodeType":"77","messageId":"78","endLine":71,"endColumn":25},{"ruleId":"75","severity":1,"message":"98","line":83,"column":9,"nodeType":"77","messageId":"78","endLine":83,"endColumn":16},{"ruleId":"75","severity":1,"message":"99","line":84,"column":9,"nodeType":"77","messageId":"78","endLine":84,"endColumn":18},{"ruleId":"75","severity":1,"message":"100","line":12,"column":3,"nodeType":"77","messageId":"78","endLine":12,"endColumn":9},{"ruleId":"75","severity":1,"message":"101","line":20,"column":3,"nodeType":"77","messageId":"78","endLine":20,"endColumn":14},{"ruleId":"75","severity":1,"message":"102","line":21,"column":3,"nodeType":"77","messageId":"78","endLine":21,"endColumn":8},{"ruleId":"75","severity":1,"message":"103","line":28,"column":8,"nodeType":"77","messageId":"78","endLine":28,"endColumn":16},{"ruleId":"75","severity":1,"message":"104","line":28,"column":20,"nodeType":"77","messageId":"78","endLine":28,"endColumn":30},{"ruleId":"75","severity":1,"message":"105","line":28,"column":32,"nodeType":"77","messageId":"78","endLine":28,"endColumn":45},{"ruleId":"106","severity":1,"message":"107","line":47,"column":23,"nodeType":"108","endLine":47,"endColumn":26},{"ruleId":"75","severity":1,"message":"109","line":309,"column":10,"nodeType":"77","messageId":"78","endLine":309,"endColumn":21},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","'icon2' is defined but never used.","'icon3' is defined but never used.","'icon1_1' is defined but never used.","'icon2_2' is defined but never used.","'icon3_3' is defined but never used.","'TabPane' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history', 'setUsername', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["112"],"'Redirect' is defined but never used.",["113"],"'buttonChecked' is assigned a value but never used.","'setbuttonChecked' is assigned a value but never used.","'setCity' is assigned a value but never used.","'setHotel' is assigned a value but never used.","'setTrade' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'checked' is assigned a value but never used.","'unChecked' is assigned a value but never used.","'Select' is defined but never used.","'InputNumber' is defined but never used.","'Badge' is defined but never used.","'ProTable' is defined but never used.","'ProColumns' is defined but never used.","'TableDropdown' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'dateChecked' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},"Update the dependencies array to be: [props.history, setUsername, username]",{"range":"117","text":"118"},{"range":"119","text":"118"},[5218,5220],"[props.history, setUsername, username]",[1369,1371]]